<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- redis单节点配置 -->
    <!--&lt;!&ndash; 引入redis.properties 配置文件 &ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:/config/redis.properties" />-->

    <!--&lt;!&ndash; 配置jedis 的连接池信息 &ndash;&gt;-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="${redis.maxTotal}" />-->
        <!--<property name="maxIdle" value="${redis.maxIdle}" />-->
        <!--<property name="minIdle" value="${redis.minIdle}" />-->
        <!--<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />-->
        <!--<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />-->
        <!--<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />-->
        <!--<property name="testOnBorrow" value="${redis.testOnBorrow}" />-->
        <!--<property name="testOnReturn" value="${redis.testOnReturn}" />-->
        <!--<property name="testWhileIdle" value="${redis.testWhileIdle}" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置jedis 的连接工厂信息 &ndash;&gt;-->
    <!--<bean id="jedisConnectionFactory"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--destroy-method="destroy"-->
          <!--p:host-name="${redis.host}"-->
          <!--p:port="${redis.port}"-->
          <!--p:usePool="${redis.usePool}"-->
          <!--p:timeout="${redis.timeout}"-->
          <!--p:pool-config-ref="jedisPoolConfig">-->
    <!--</bean>-->

    <!--&lt;!&ndash; 处理缓存数据的模板类 &ndash;&gt;-->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"-->
          <!--p:connection-factory-ref="jedisConnectionFactory">-->
        <!--&lt;!&ndash; 指定键序列化方法 &ndash;&gt;-->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
        <!--<property name="hashKeySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
        <!--&lt;!&ndash; 指定值的序列化方法&ndash;&gt;-->
        <!--<property name="valueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
        <!--</property>-->
        <!--<property name="hashValueSerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
        <!--</property>-->

    <!--</bean>-->

    <!--&lt;!&ndash; 处理字符串的模板类 &ndash;&gt;-->
    <!--<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"-->
          <!--p:connection-factory-ref="jedisConnectionFactory" />-->


    <!-- redis集群版配置 -->
    <!-- 加载配置属性文件 按需加载 -->
    <!--<context:property-placeholder-->
            <!--ignore-unresolvable="true" location="classpath:redis.cluster.properties" />-->
    <!-- 配置Cluster -->
    <bean id="redisClusterConfiguration"
          class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="3"></property>
        <!-- 节点配置 -->
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="192.168.3.15"></constructor-arg>
                    <constructor-arg name="port" value="6381"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="192.168.3.15"></constructor-arg>
                    <constructor-arg name="port" value="6382"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="192.168.3.15"></constructor-arg>
                    <constructor-arg name="port" value="6383"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="192.168.3.15"></constructor-arg>
                    <constructor-arg name="port" value="6384"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="192.168.3.15"></constructor-arg>
                    <constructor-arg name="port" value="6385"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="192.168.3.15"></constructor-arg>
                    <constructor-arg name="port" value="6386"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="100" />
        <property name="maxTotal" value="600" />
    </bean>
    <bean id="jeidsConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="redisClusterConfiguration" />
        <constructor-arg ref="jedisPoolConfig" />
    </bean>
    <!-- redis 访问的模版 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jeidsConnectionFactory" />
    </bean>



</beans>